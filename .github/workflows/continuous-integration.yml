name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_BUILDKIT: 1

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Bake
        uses: docker/bake-action@v3
        with:
          push: false
          load: true
          files: docker-compose.yml
          set: |
            pgstac.cache-from=type=gha
            pgstac.cache-to=type=gha,mode=max
            pypgstac.cache-from=type=gha
            pypgstac.cache-to=type=gha,mode=max

      - name: Test via Compose
        run: scripts/test

      # - uses: docker/setup-buildx-action@v2
      # - name: docker-compose-build
      #   run: docker buildx bake --file docker-compose.yml --file docker-compose-cache.json
      # - name: test
      #   id: test
      #   run: scripts/test
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: docker/pgstac/Dockerfile
      #     load: true
      #     push: false
      #     cache-from: type=gha
      #     cache-to: type=gha, mode=max
      # - name: pypgstacbuilder
      #   id: pypgstacbuilder
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: docker/pypgstac/Dockerfile
      #     load: true
      #     push: false
      #     cache-from: type=gha
      #     cache-to: type=gha, mode=max

      # - name: Start Database
      #   run: docker run -d --rm -e POSTGRES_PASSWORD=pg --expose 5432 ${{ steps.pgstacbuilder.outputs.imageid }}

      # - name: Database Ready
      #   run: docker exec ${{ steps.pgstacbuilder.outputs.imageid }} pg_isready

      # - name: Run tests
      #   run: docker run --rm -e PGUSER=postgres -e PGDATABASE=postgres -e PGPASSWORD ${{ steps.pypgstacbuilder.outputs.imageid }} /opt/docker/pypgstac/bin/test
