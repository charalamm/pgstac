SET pgstac.use_queue=TRUE;
SET
--create base data to use with tests
CREATE TEMP TABLE test_items AS
SELECT jsonb_build_object(
'id', concat('pgstactest-partitioned-', (row_number() over ())::text),
'collection', 'pgstactest-partitioned',
'geometry', '{"type": "Polygon", "coordinates": [[[-85.309412, 30.933949], [-85.308201, 31.002658], [-85.378084, 31.003555], [-85.379245, 30.934843], [-85.309412, 30.933949]]]}'::json,
'properties', jsonb_build_object( 'datetime', g::text)
) as content FROM generate_series('2020-01-01'::timestamptz, '2022-01-01'::timestamptz, '1 week'::interval) g;
SELECT 105
--test non-partitioned collection
INSERT INTO collections (content) VALUES ('{"id":"pgstactest-partitioned"}');
INSERT 0 1
INSERT INTO items_staging(content)
SELECT content FROM test_items;
INSERT 0 105
SELECT count(*) FROM partitions WHERE collection='pgstactest-partitioned';
1

--test collection partioned by year
INSERT INTO collections (content, partition_trunc) VALUES ('{"id":"pgstactest-partitioned-year"}', 'year');
INSERT 0 1
INSERT INTO items_staging(content)
SELECT content || '{"collection":"pgstactest-partitioned-year"}'::jsonb FROM test_items;
INSERT 0 105
SELECT count(*) FROM partitions WHERE collection='pgstactest-partitioned-year';
2

--test collection partioned by month
INSERT INTO collections (content, partition_trunc) VALUES ('{"id":"pgstactest-partitioned-month"}', 'month');
INSERT 0 1
INSERT INTO items_staging(content)
SELECT content || '{"collection":"pgstactest-partitioned-month"}'::jsonb FROM test_items;
INSERT 0 105
SELECT count(*) FROM partitions WHERE collection='pgstactest-partitioned-month';
24

--test repartitioning from year to non partitioned
UPDATE collections SET partition_trunc=NULL WHERE id='pgstactest-partitioned-year';
UPDATE 1
SELECT count(*) FROM partitions WHERE collection='pgstactest-partitioned-year';
1

SELECT count(*) FROM items WHERE collection='pgstactest-partitioned-year';
105

--test repartitioning from non-partitioned to year
UPDATE collections SET partition_trunc='year' WHERE id='pgstactest-partitioned';
UPDATE 1
SELECT count(*) FROM partitions WHERE collection='pgstactest-partitioned';
2

SELECT count(*) FROM items WHERE collection='pgstactest-partitioned';
105

--test noop for repartitioning
UPDATE collections SET content=content || '{"foo":"bar"}'::jsonb WHERE id='pgstactest-partitioned-month';
UPDATE 1
SELECT count(*) FROM partitions WHERE collection='pgstactest-partitioned-month';
24

SELECT count(*) FROM items WHERE collection='pgstactest-partitioned-month';
105

--check that partition stats haven't been updated
SELECT collection, partition_dtrange, constraint_dtrange, constraint_edtrange, dtrange, edtrange, spatial FROM partitions WHERE collection='pgstactest-partitioned-year';
pgstactest-partitioned-year | [-infinity,infinity] | [-infinity,infinity] | [-infinity,infinity] |         |          |

--check that queue has items
SELECT count(*) FROM query_queue;
90

--run queue items to update partition stats
SELECT run_queued_queries_intransaction();
90

--check that partition stats have been updated
SELECT collection, partition_dtrange, constraint_dtrange, constraint_edtrange, dtrange, edtrange, spatial FROM partitions WHERE collection='pgstactest-partitioned-year';
pgstactest-partitioned-year | [-infinity,infinity] | ["2020-01-01 00:00:00+00","2021-12-29 00:00:00+00"] | ["2020-01-01 00:00:00+00","2021-12-29 00:00:00+00"] | ["2020-01-01 00:00:00+00","2021-12-29 00:00:00+00"] | ["2020-01-01 00:00:00+00","2021-12-29 00:00:00+00"] | 01030000000100000005000000000000A0455855C00000004017EF3E40000000A0455855C000000000E9003F4000000080B95355C000000000E9003F4000000080B95355C00000004017EF3E40000000A0455855C00000004017EF3E40
